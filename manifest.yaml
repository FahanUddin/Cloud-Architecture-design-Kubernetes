apiVersion: v1
kind: Namespace
metadata:
  name: whiteboard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: whiteboard-config
  namespace: whiteboard
data:
  MONGO_CONNECTION_STRING: "mongodb+srv://meharfatimak:oLn3C83JMDXZD9pf@cluster0.cacbl.mongodb.net/whiteboard?retryWrites=true&w=majority&appName=Cluster0"
  REDIS_HOST: redis-14494.c226.eu-west-1-3.ec2.redns.redis-cloud.com
  REDIS_PORT: "14494"
  REDIS_PASSWORD: cRvjHgI972UVnGR7ls2ZFbppr93nJwB4
  SERVER_PORT: "5000"
  REDIS_SERVER_IP: redis
  REDIS_SERVER_PORT: "6379"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: whiteboard
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'backend'
        static_configs:
          - targets: ['backend:5000']
      - job_name: 'redis'
        static_configs:
          - targets: ['redis:6379']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: whiteboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: whiteboard
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6379"
spec:
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: whiteboard
spec:
  replicas: 4
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
	    - weight: 1
	      podAffinityTerm:
                labelSelector:
                  matchLabels:
                     app: backend
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - vmworker1
                  - vmworker2
      containers:
      - name: backend
        image: meharfatimakhan/whiteboard-backend:1.4
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: whiteboard-config
        resources:
          requests:
            cpu: "300m"
            memory: "256Mi"
          limits:
            cpu: "900m"
            memory: "512Mi"


---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: whiteboard
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: whiteboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--web.listen-address=:9090"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: whiteboard
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: whiteboard
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 5000
